# ========================================
# Confluence How-To Bot Configuration
# ========================================
# Copy this file to .env and fill in your actual values
# Never commit your .env file to version control!

# ========================================
# AWS Configuration (Multiple Options)
# ========================================

# OPTION 1: GoDaddy Employees - Okta SSO (RECOMMENDED)
# Uses GoDaddy's aws-okta-processor with corporate Okta SSO
# Authentication flow: Okta username/password + YubiKey MFA
# Assumes role: GD-AWS-USA-GD-AISummerCa-Dev-Private-PowerUser
# Credentials expire after 1 hour (automatic refresh)
AWS_PROFILE=default
AWS_REGION=us-west-2

# OPTION 2: Use AWS CLI Profile (Good for other profiles)
# Set AWS_PROFILE to use a specific profile from ~/.aws/credentials
# AWS_PROFILE=your-profile-name
# AWS_REGION=us-west-2

# OPTION 3: Use AWS Credential Chain (Fallback)
# No environment variables needed! The app will automatically use:
# - IAM roles (when running on EC2/ECS/Lambda)
# - AWS SSO credentials
# - AWS CLI profiles (~/.aws/credentials)
# - Instance profiles
# Just set the region:
# AWS_REGION=us-west-2

# OPTION 4: Explicit credentials (Legacy, less secure)
# Only use if you can't use options 1-3
# AWS_ACCESS_KEY_ID=your_aws_access_key_here
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
# AWS_SESSION_TOKEN=your_aws_session_token_here  # For temporary/Okta credentials
# AWS_REGION=us-west-2

# Note: For Okta/SAML credentials, you need all three:
# - AWS_ACCESS_KEY_ID (from Okta)
# - AWS_SECRET_ACCESS_KEY (from Okta) 
# - AWS_SESSION_TOKEN (from Okta)
# These are temporary credentials that expire (usually 1-12 hours)

# ========================================
# OpenAI Configuration (Required)
# ========================================
OPENAI_API_KEY=sk-your_openai_api_key_here

# ========================================
# Confluence Configuration (Required)
# ========================================
CONFLUENCE_URL=https://your-company.atlassian.net
CONFLUENCE_USERNAME=your-email@company.com
CONFLUENCE_API_TOKEN=your_confluence_api_token_here
CONFLUENCE_SPACE_KEY=your_space_key

# ========================================
# Optional: Redshift Configuration
# ========================================
REDSHIFT_HOST=your-redshift-cluster.region.redshift.amazonaws.com
REDSHIFT_DATABASE=your_database_name
REDSHIFT_PORT=5439
REDSHIFT_USER=your_db_username
REDSHIFT_PASSWORD=your_db_password

# ========================================
# Setup Instructions
# ========================================
# 1. Copy this file: cp env.example .env
# 2. Choose your AWS authentication method (see above)
# 3. Fill in your credentials for the chosen method
# 4. Test your config: python dashboard_analyzer.py

# ========================================
# AWS Authentication Setup Examples
# ========================================

# For AWS SSO (Single Sign-On):
# 1. Configure AWS SSO: aws configure sso
# 2. Login: aws sso login
# 3. Use credential chain (Option 1 above)

# For AWS CLI profiles:
# 1. Configure: aws configure --profile your-profile-name
# 2. Set AWS_PROFILE=your-profile-name (Option 2 above)

# For IAM roles (production):
# 1. Attach role to EC2/ECS/Lambda instance
# 2. Use credential chain (Option 1 above)