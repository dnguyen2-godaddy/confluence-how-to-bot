#!/usr/bin/env python3
"""
Example: QuickSight Dashboard Embedding

This script demonstrates how to create a QuickSight dashboard and generate
embeddable URLs for web applications.
"""

import logging
from utils.quicksight_manager import QuickSightManager

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def create_dashboard_and_embed():
    """
    Complete example of creating a dashboard and getting embed URL.
    """
    try:
        print("🚀 QuickSight Dashboard Creation & Embedding Example")
        print("=" * 60)
        
        # Initialize QuickSight manager
        qs_manager = QuickSightManager()
        
        # Create complete dashboard infrastructure
        print("📊 Creating dashboard infrastructure...")
        result = qs_manager.setup_complete_dashboard(
            data_source_id='example-redshift-source',
            dataset_id='example-scorecard-dataset', 
            dashboard_id='example-scorecard-dashboard'
        )
        
        print(f"✅ Dashboard created successfully!")
        print(f"🔗 Embed URL: {result['embed_url']}")
        
        # Generate HTML template for embedding
        html_template = generate_html_template(result['embed_url'])
        
        # Save HTML to file
        with open('dashboard_example.html', 'w') as f:
            f.write(html_template)
        
        print(f"💾 HTML template saved to: dashboard_example.html")
        print(f"🌐 Open the file in a browser to view your dashboard!")
        
        return result
        
    except Exception as e:
        logger.error(f"Example failed: {e}")
        raise


def generate_html_template(embed_url: str) -> str:
    """
    Generate a complete HTML template for embedding the dashboard.
    
    Args:
        embed_url: The QuickSight embed URL
        
    Returns:
        Complete HTML template as string
    """
    html_template = f"""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scorecard Dashboard</title>
    <style>
        body {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }}
        
        .header {{
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            text-align: center;
        }}
        
        .dashboard-container {{
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }}
        
        .dashboard-iframe {{
            width: 100%;
            height: 800px;
            border: none;
        }}
        
        .info-panel {{
            background: #e8f4fd;
            border-left: 4px solid #3498db;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
        }}
        
        .footer {{
            text-align: center;
            margin-top: 20px;
            color: #666;
            font-size: 14px;
        }}
    </style>
</head>
<body>
    <div class="header">
        <h1>📊 Scorecard Metrics Dashboard</h1>
        <p>Interactive business intelligence dashboard powered by Amazon QuickSight</p>
    </div>
    
    <div class="info-panel">
        <strong>📈 Dashboard Features:</strong>
        <ul>
            <li>Metrics by Region - Bar chart visualization</li>
            <li>Metrics Trend Over Time - Line chart analysis</li>
            <li>Detailed Metrics Table - Comprehensive data breakdown</li>
        </ul>
    </div>
    
    <div class="dashboard-container">
        <iframe 
            class="dashboard-iframe"
            src="{embed_url}"
            title="QuickSight Dashboard">
        </iframe>
    </div>
    
    <div class="footer">
        <p>🔒 Secure dashboard powered by Amazon QuickSight</p>
        <p>Data sourced from Amazon Redshift | Generated by Confluence How-To Bot</p>
    </div>
    
    <script>
        // Optional: Add JavaScript for enhanced interactivity
        console.log('QuickSight Dashboard loaded successfully');
        
        // Monitor iframe load status
        const iframe = document.querySelector('.dashboard-iframe');
        iframe.onload = function() {{
            console.log('Dashboard iframe loaded');
        }};
        
        iframe.onerror = function() {{
            console.error('Failed to load dashboard');
            document.querySelector('.dashboard-container').innerHTML = 
                '<div style="padding: 50px; text-align: center; color: #e74c3c;">' +
                '<h3>⚠️ Dashboard Loading Error</h3>' +
                '<p>Please check your QuickSight configuration and try again.</p>' +
                '</div>';
        }};
    </script>
</body>
</html>
"""
    return html_template


def get_existing_dashboard_url():
    """Get embed URL for an existing dashboard."""
    try:
        qs_manager = QuickSightManager()
        
        # Use existing dashboard or prompt for ID
        dashboard_id = input("Enter your dashboard ID (or press Enter for 'example-scorecard-dashboard'): ").strip()
        if not dashboard_id:
            dashboard_id = 'example-scorecard-dashboard'
        
        embed_url = qs_manager.get_dashboard_embed_url(dashboard_id)
        
        print(f"\n🔗 Embed URL for dashboard '{dashboard_id}':")
        print(f"{embed_url}")
        
        # Generate HTML for this dashboard
        html_template = generate_html_template(embed_url)
        filename = f"dashboard_{dashboard_id}.html"
        
        with open(filename, 'w') as f:
            f.write(html_template)
        
        print(f"💾 HTML template saved to: {filename}")
        
        return embed_url
        
    except Exception as e:
        logger.error(f"Failed to get dashboard URL: {e}")
        raise


def main():
    """Main function for the embedding example."""
    print("🌟 QuickSight Dashboard Embedding Example")
    print("==========================================")
    
    print("\n🎯 What would you like to do?")
    print("1. 📊 Create new dashboard and generate embed HTML")
    print("2. 🔗 Get embed URL for existing dashboard") 
    print("3. ❌ Exit")
    
    choice = input("\nEnter your choice (1-3): ").strip()
    
    if choice == '1':
        try:
            result = create_dashboard_and_embed()
            print(f"\n🎉 Success! Your dashboard is ready.")
            print(f"📋 Dashboard ID: {result['dashboard_id']}")
            print(f"🔗 Embed URL: {result['embed_url']}")
            
        except Exception as e:
            print(f"❌ Creation failed: {e}")
    
    elif choice == '2':
        try:
            embed_url = get_existing_dashboard_url()
            print(f"\n✅ Embed URL generated successfully!")
            
        except Exception as e:
            print(f"❌ Failed to get embed URL: {e}")
    
    elif choice == '3':
        print("👋 Goodbye!")
    
    else:
        print("Invalid choice. Please run the script again.")


if __name__ == "__main__":
    main()